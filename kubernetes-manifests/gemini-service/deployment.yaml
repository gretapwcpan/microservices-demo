apiVersion: apps/v1
kind: Deployment
metadata:
  name: geminiservice
  namespace: quanbuy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: geminiservice
  template:
    metadata:
      labels:
        app: geminiservice
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: gemini-sa
      containers:
      - name: server
        image: gcr.io/PROJECT_ID/geminiservice:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: PORT
          value: "8080"
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: gemini-secret
              key: api-key
        - name: GCP_PROJECT_ID
          valueFrom:
            configMapKeyRef:
              name: gcp-config
              key: project-id
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/var/secrets/google/key.json"
        volumeMounts:
        - name: google-cloud-key
          mountPath: /var/secrets/google
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: google-cloud-key
        secret:
          secretName: gcp-service-account-key
      nodeSelector:
        cloud.google.com/gke-spot: "true"  # Use spot instances for cost savings
      tolerations:
      - key: cloud.google.com/gke-spot
        operator: Equal
        value: "true"
        effect: NoSchedule
