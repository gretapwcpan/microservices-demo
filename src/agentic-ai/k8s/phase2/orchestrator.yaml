apiVersion: apps/v1
kind: Deployment
metadata:
  name: multi-agent-orchestrator
  labels:
    app: multi-agent-orchestrator
    tier: agentic-ai
    phase: phase2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: multi-agent-orchestrator
  template:
    metadata:
      labels:
        app: multi-agent-orchestrator
        tier: agentic-ai
        phase: phase2
    spec:
      containers:
      - name: orchestrator
        image: gcr.io/PROJECT_ID/multi-agent-orchestrator:latest
        ports:
        - containerPort: 8084
        env:
        - name: A2A_BROKER_URL
          value: "ws://a2a-broker:8082"
        - name: MCP_SERVER_URL
          value: "http://mcp-server:8080"
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8084
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8084
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: multi-agent-orchestrator
  labels:
    app: multi-agent-orchestrator
    tier: agentic-ai
spec:
  type: ClusterIP
  ports:
  - port: 8084
    targetPort: 8084
    name: http
  selector:
    app: multi-agent-orchestrator
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: orchestrator-netpol
spec:
  podSelector:
    matchLabels:
      app: multi-agent-orchestrator
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    ports:
    - protocol: TCP
      port: 8084
  - from:
    - podSelector:
        matchLabels:
          tier: agentic-ai
    ports:
    - protocol: TCP
      port: 8084
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: a2a-broker
    ports:
    - protocol: TCP
      port: 8082
    - protocol: TCP
      port: 8083
  - to:
    - podSelector:
        matchLabels:
          app: mcp-server
    ports:
    - protocol: TCP
      port: 8080